# DOCKER COMPOSE CONFIGURATION
# This file uses the version 2 docker-compose file format, described here:
# https://docs.docker.com/compose/compose-file/#version-2

version: '2'

services:


  ## INFRASTRUCTURE SERVICES
  
  ### PERSISTENT DATA VOLUME
  
  # On a Mac, execute 
  #    dscacheutil -q user | grep -A 3 -B 2 -e uid:\ 5'[0-9][0-9]'
  # in a Terminal instance to obtain the uid:gid for the account that runs your docker-machine instance
  # You will want to edit the command below if your uid:gid differ
  data:
    image: busybox
    command: "mkdir /data && chown 502:20 /data && chmod 700 /data"
  
  ### KIBANA
  kibana:
    image: kibana:5.0.0
    links:
      - elasticsearch
    ports:
      - 5601:5601
      
  ### ELASTICSEARCH
  elasticsearch:
    image: elasticsearch:5.0.0
    ports:
      - 9200:9200
  
  ### REDIS
  redis:
    image: redis:3.2.0-alpine
    ports:
      - 6379:6379
  
  ### LOGSTASH
  logstash:
    image: logstash:5.0.0
    environment:
      - ES_HEAP_SIZE=2g
    command: 'logstash -f /logstash.conf -v'
    volumes:
      - ./monitoring/logstash.conf:/logstash.conf
    links:
      - redis
      - elasticsearch
  
  ### LOGSPOUT
  
  # Thank you R. Toma 
  # (@see https://github.com/rtoma/logspout-redis-logstash/blob/master/example/docker-compose.yml)
  
  logspout:
    image: rtoma/logspout-redis-logstash
    command: 'redis://redis'
    environment:
      - DEBUG=true
      - REDIS_KEY=logstash
      - REDIS_DOCKER_HOST=$DOCKER_IP
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    links:
      - redis
      
  ### GRAPHITE, STATSD
  graphite:
    image: hopsoft/graphite-statsd
    ports:
      - 8000:80
      - 2003:2003
      - 8125:8125
      - 8125:8125/udp
      - 8126:8126
  
  ### GRAFANA
  grafana:
    image: grafana/grafana:3.0.4
    ports:
      - 3000:3000
    env_file:
      - ./monitoring/grafana.env
    links:
      - graphite
      
  ### CADVISOR
  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 9080:8080
      
  ### DATABASE
  db:
    image: mariadb:10.1
    privileged: true
    ports:
      - 3306:3306
    env_file:
      - ./mysql/db.env
    volumes_from:
      - data
      
  ### KAFKA
  kafka:
    image: spotify/kafka
    ports:
      - 2181:2181
      - 9092:9092
    environment:
      - KAFKA_HEAP_OPTS="-Xmx1G -Xms128M"
      - ADVERTISED_HOST=$DOCKER_IP
      - ADVERTISED_PORT=9092
      
  
  ### DATABASE ADMINISTRATION
  
  # Thank you timhaak!
  # @see https://github.com/timhaak/docker-phpmyadmin-alpine
  
  phpmyadmin:
    build: phpmyadmin
    ports: 
      - 8082:80
    env_file:
      - ./phpmyadmin/admin.env
    links:
      - db
      
  ### WATCHTOWER
  
  watchtower:
    image: centurylink/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  
  ## NEFLIX OSS, SUPPORT SERVICES
  
  ### CONFIGURATION MANAGEMENT
  config-service:
    image: fastnsilver/grivet-config-server
    ports:
      - 8888:8888
    links:
      - discovery-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DOCKER_IP=$DOCKER_IP
      - JAVA_OPTS=-Xmx256m
  
  ### EUREKA, DISCOVERY
  discovery-service:
    image: fastnsilver/grivet-discovery-service
    ports:
      - 8761:8761
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DOCKER_IP=$DOCKER_IP
      - JAVA_OPTS=-Xmx256m
  
  ### ZUUL, API GATEWAY
  api-gateway:
    image: fastnsilver/grivet-api-gateway
    ports:
      - 8080:8080
    links:
      - springboot-admin
      - discovery-service
      - grivet-standalone
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DOCKER_IP=$DOCKER_IP
      - JAVA_OPTS=-Xmx256m
  
  ### SPRING BOOT SERVICE ADMINISTRATION
  springboot-admin:
    image: fastnsilver/grivet-boot-admin
    ports:
      - 5555:5555
    links:
      - discovery-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DOCKER_IP=$DOCKER_IP
      - JAVA_OPTS=-Xmx512m
  
  
  ## CORE SERVICES
  
  ### GRIVET SERVICE
  grivet-standalone:
    image: fastnsilver/grivet-standalone
    ports:
      - 8081:8081
    links:
      - config-service
      - discovery-service
      - graphite
      - db
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/grivetdb
      - MONITORING_STATSD_ENABLED=true
      - DOCKER_IP=$DOCKER_IP
      - JAVA_OPTS=-Xmx2G
